/* Generated id = <%= uuid %>, version:<%= version %> */
import { Types } from "mongoose";
import { Injectable, Module } from "@nestjs/common";
import { <%= entityClassName %> } from "entities/domainEntities/<%= entityFileName %>";
import { DatabaseAccess } from "infrastructure/database/DatabaseAccess";
import {
  <%= gatewayInterfaceName %>,
} from "usecases/<%= usecaseName %>/entityGateways";
import { MongoDbModule } from "infrastructure/database/mongodb.module";


@Injectable()
export class <%= gatewayeClassName %> extends DatabaseAccess implements <%= gatewayInterfaceName %> {
  async execute(): Promise<<%= entityClassName%>> {
    /* dbModel = new this.<%= entityVariableName%>DatabaseModel({
      macAddress: device.macAddress.getMacAddress(),
      deviceType: new Types.ObjectId(device.deviceType.id),
      createdAt: new Date(),
      broken: false,
    });
    let result = await dbModel.save();
    device.id = result._id.toString();
    
    return device;
    */
    return null
  }
}

const prov_exports = [
<%= gatewayeClassName %>,
];
MongoDbModule;
@Module({
  imports: [],
  providers: prov_exports,
  exports: prov_exports,
})
export class GatewayModule {}
